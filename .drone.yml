kind: pipeline
type: docker
name: Onitama CI

trigger:
  event:
    - pull_request

steps:
  - name: OnitamaBuild
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands:
      - cd Sources
      - dotnet workload restore
      - dotnet restore OnitamaCI.sln
      - dotnet build OnitamaCI.sln -c Release --no-restore
      - dotnet publish OnitamaCI.sln -c Release --no-restore -o $CI_PROJECT_DIR/build/release
    when:
        branch:
          - master

  - name: OnitamaMauibuild
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet9-maui:latest
    commands:
      - cd Sources/Onitama
      - dotnet restore Onitama.sln
      - dotnet build Onitama.sln -c Release --no-restore /p:AndroidSdkDirectory=$ANDROID_SDK_ROOT -property:Aapt2ToolPath=$ANDROID_SDK_ROOT/build-tools/35.0.0
      - dotnet publish OnitamaMaui/OnitamaMaui.csproj -c Release --no-restore -o $CI_PROJECT_DIR/build/release -f:net9.0-android /p:AndroidSdkDirectory=/usr/lib/android-sdk

  - name: OnitamaTests
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands:
      - cd Sources
      - dotnet restore OnitamaCI.sln
      - dotnet test OnitamaCI.sln --no-restore
    depends_on: [ OnitamaBuild ]
    
  - name: OnitamaMauiTests
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet9-maui:latest
    commands:
      - cd Sources/Onitama
      - dotnet restore Onitama.sln
      - dotnet test Onitama.sln --no-restore
    depends_on: [ OnitamaMauibuild ]

  - name: generate-and-deploy-docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: docs
        path: /docs
    commands:
      - /entrypoint.sh
    when:
      branch:
        - master
      event:
        - push
        - pull_request
    depends_on: [ OnitamaBuild, OnitamaTests ]

  - name: code-inspection
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet9
    secrets: [ SECRET_SONAR_LOGIN ]
    environment:
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
      project_key: Onitama
      coverage_exclusions: "**OnitamaTests/**,**OnitamaConsole/**"
    commands:
      - cd Sources
      - dotnet restore OnitamaCI.sln
      - dotnet sonarscanner begin /k:$${project_key} /d:sonar.host.url=$${sonar_host} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions=$${coverage_exclusions} /d:sonar.login=$${sonar_token} 
      - dotnet build OnitamaCI.sln -c Release --no-restore
      - dotnet test OnitamaCI.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet publish OnitamaCI.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${sonar_token}
    depends_on: [ OnitamaBuild ]


